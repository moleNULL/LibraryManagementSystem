// <auto-generated />
using System;
using LibraryManagementSystem.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LibraryManagementSystem.DAL.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BookEntityGenreEntity", b =>
                {
                    b.Property<int>("BooksId")
                        .HasColumnType("int");

                    b.Property<int>("GenresId")
                        .HasColumnType("int");

                    b.HasKey("BooksId", "GenresId");

                    b.HasIndex("GenresId");

                    b.ToTable("BooksGenres", (string)null);
                });

            modelBuilder.Entity("LibraryManagementSystem.BLL.Models.Entities.BookEntities.AuthorEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.HasKey("Id");

                    b.ToTable("Authors", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FirstName = "Ayn",
                            LastName = "Rand"
                        },
                        new
                        {
                            Id = 2,
                            FirstName = "F. Scott",
                            LastName = "Fitzgerald"
                        },
                        new
                        {
                            Id = 3,
                            FirstName = "Jules",
                            LastName = "Verne"
                        },
                        new
                        {
                            Id = 4,
                            FirstName = "Agatha",
                            LastName = "Christie"
                        },
                        new
                        {
                            Id = 5,
                            FirstName = "George",
                            LastName = "Orwell"
                        },
                        new
                        {
                            Id = 6,
                            FirstName = "Stephen",
                            LastName = "King"
                        },
                        new
                        {
                            Id = 7,
                            FirstName = "George",
                            LastName = "Martin"
                        },
                        new
                        {
                            Id = 8,
                            FirstName = "Haruki",
                            LastName = "Murakami"
                        });
                });

            modelBuilder.Entity("LibraryManagementSystem.BLL.Models.Entities.BookEntities.BookEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AuthorId")
                        .HasColumnType("int");

                    b.Property<int>("BookLoanId")
                        .HasColumnType("int");

                    b.Property<int?>("DescriptionId")
                        .HasColumnType("int");

                    b.Property<int>("LanguageId")
                        .HasColumnType("int");

                    b.Property<int>("PagesNumber")
                        .HasColumnType("int");

                    b.Property<string>("PictureName")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<int>("PublisherId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<int>("WarehouseId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("BookLoanId")
                        .IsUnique();

                    b.HasIndex("DescriptionId")
                        .IsUnique()
                        .HasFilter("[DescriptionId] IS NOT NULL");

                    b.HasIndex("LanguageId");

                    b.HasIndex("PublisherId");

                    b.HasIndex("WarehouseId");

                    b.ToTable("Books", (string)null);
                });

            modelBuilder.Entity("LibraryManagementSystem.BLL.Models.Entities.BookEntities.DescriptionEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BookId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Descriptions", (string)null);
                });

            modelBuilder.Entity("LibraryManagementSystem.BLL.Models.Entities.BookEntities.GenreEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("Genres", (string)null);
                });

            modelBuilder.Entity("LibraryManagementSystem.BLL.Models.Entities.BookEntities.LanguageEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Languages", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "English"
                        },
                        new
                        {
                            Id = 2,
                            Name = "French"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Japanese"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Russian"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Ukrainian"
                        });
                });

            modelBuilder.Entity("LibraryManagementSystem.BLL.Models.Entities.BookEntities.PublisherEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.HasKey("Id");

                    b.ToTable("Publishers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "AST"
                        },
                        new
                        {
                            Id = 2,
                            Name = "ZNANNIA"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Signet"
                        });
                });

            modelBuilder.Entity("LibraryManagementSystem.BLL.Models.Entities.BookEntities.WarehouseEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Price")
                        .HasColumnType("money");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Warehouse", (string)null);
                });

            modelBuilder.Entity("LibraryManagementSystem.BLL.Models.Entities.BookLoanEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BookId")
                        .HasColumnType("int");

                    b.Property<int>("LibrarianId")
                        .HasColumnType("int");

                    b.Property<DateTime>("LoanDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ReturnDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LibrarianId");

                    b.HasIndex("StudentId");

                    b.ToTable("BookLoans", (string)null);
                });

            modelBuilder.Entity("LibraryManagementSystem.BLL.Models.Entities.LibrarianEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<DateTime>("EntryDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<string>("PictureName")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.HasKey("Id");

                    b.ToTable("Librarians", (string)null);
                });

            modelBuilder.Entity("LibraryManagementSystem.BLL.Models.Entities.StudentEntities.CityEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.HasKey("Id");

                    b.ToTable("Cities", (string)null);
                });

            modelBuilder.Entity("LibraryManagementSystem.BLL.Models.Entities.StudentEntities.StudentEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int?>("CityId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EntryDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<string>("PictureName")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.ToTable("Students", (string)null);
                });

            modelBuilder.Entity("BookEntityGenreEntity", b =>
                {
                    b.HasOne("LibraryManagementSystem.BLL.Models.Entities.BookEntities.BookEntity", null)
                        .WithMany()
                        .HasForeignKey("BooksId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LibraryManagementSystem.BLL.Models.Entities.BookEntities.GenreEntity", null)
                        .WithMany()
                        .HasForeignKey("GenresId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LibraryManagementSystem.BLL.Models.Entities.BookEntities.BookEntity", b =>
                {
                    b.HasOne("LibraryManagementSystem.BLL.Models.Entities.BookEntities.AuthorEntity", "Author")
                        .WithMany("Books")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LibraryManagementSystem.BLL.Models.Entities.BookLoanEntity", "BookLoan")
                        .WithOne("Book")
                        .HasForeignKey("LibraryManagementSystem.BLL.Models.Entities.BookEntities.BookEntity", "BookLoanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LibraryManagementSystem.BLL.Models.Entities.BookEntities.DescriptionEntity", "Description")
                        .WithOne("Book")
                        .HasForeignKey("LibraryManagementSystem.BLL.Models.Entities.BookEntities.BookEntity", "DescriptionId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("LibraryManagementSystem.BLL.Models.Entities.BookEntities.LanguageEntity", "Language")
                        .WithMany("Books")
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LibraryManagementSystem.BLL.Models.Entities.BookEntities.PublisherEntity", "Publisher")
                        .WithMany("Books")
                        .HasForeignKey("PublisherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LibraryManagementSystem.BLL.Models.Entities.BookEntities.WarehouseEntity", "Warehouse")
                        .WithMany("Books")
                        .HasForeignKey("WarehouseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");

                    b.Navigation("BookLoan");

                    b.Navigation("Description");

                    b.Navigation("Language");

                    b.Navigation("Publisher");

                    b.Navigation("Warehouse");
                });

            modelBuilder.Entity("LibraryManagementSystem.BLL.Models.Entities.BookLoanEntity", b =>
                {
                    b.HasOne("LibraryManagementSystem.BLL.Models.Entities.LibrarianEntity", "Librarian")
                        .WithMany("BookLoans")
                        .HasForeignKey("LibrarianId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LibraryManagementSystem.BLL.Models.Entities.StudentEntities.StudentEntity", "Student")
                        .WithMany("BookLoans")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Librarian");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("LibraryManagementSystem.BLL.Models.Entities.StudentEntities.StudentEntity", b =>
                {
                    b.HasOne("LibraryManagementSystem.BLL.Models.Entities.StudentEntities.CityEntity", "City")
                        .WithMany("Students")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("City");
                });

            modelBuilder.Entity("LibraryManagementSystem.BLL.Models.Entities.BookEntities.AuthorEntity", b =>
                {
                    b.Navigation("Books");
                });

            modelBuilder.Entity("LibraryManagementSystem.BLL.Models.Entities.BookEntities.DescriptionEntity", b =>
                {
                    b.Navigation("Book")
                        .IsRequired();
                });

            modelBuilder.Entity("LibraryManagementSystem.BLL.Models.Entities.BookEntities.LanguageEntity", b =>
                {
                    b.Navigation("Books");
                });

            modelBuilder.Entity("LibraryManagementSystem.BLL.Models.Entities.BookEntities.PublisherEntity", b =>
                {
                    b.Navigation("Books");
                });

            modelBuilder.Entity("LibraryManagementSystem.BLL.Models.Entities.BookEntities.WarehouseEntity", b =>
                {
                    b.Navigation("Books");
                });

            modelBuilder.Entity("LibraryManagementSystem.BLL.Models.Entities.BookLoanEntity", b =>
                {
                    b.Navigation("Book")
                        .IsRequired();
                });

            modelBuilder.Entity("LibraryManagementSystem.BLL.Models.Entities.LibrarianEntity", b =>
                {
                    b.Navigation("BookLoans");
                });

            modelBuilder.Entity("LibraryManagementSystem.BLL.Models.Entities.StudentEntities.CityEntity", b =>
                {
                    b.Navigation("Students");
                });

            modelBuilder.Entity("LibraryManagementSystem.BLL.Models.Entities.StudentEntities.StudentEntity", b =>
                {
                    b.Navigation("BookLoans");
                });
#pragma warning restore 612, 618
        }
    }
}
